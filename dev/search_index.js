var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Qsim","category":"page"},{"location":"#Qsim","page":"Home","title":"Qsim","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Qsim.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Qsim]","category":"page"},{"location":"#Qsim.basis-Tuple{BitVector}","page":"Home","title":"Qsim.basis","text":"function basis(qbits::BitVector)\n\nFunction to return a z-basis vector given a bitvector of qubit z-values . \n\n\n\n\n\n","category":"method"},{"location":"#Qsim.ctrl_op-Tuple{Any, Integer, Integer, Integer}","page":"Home","title":"Qsim.ctrl_op","text":"function ctrl_op(gate, cqbit::Integer, tqbit::Integer, qmax::Integer)\n\nReturns a controlled version of gate with control and target bits defined by cqbit and tqbit in space with dimension 2^qmax.\n\n\n\n\n\n","category":"method"},{"location":"#Qsim.del_qbit-Tuple{Any, Any}","page":"Home","title":"Qsim.del_qbit","text":"function del_qbit(state, qseq)\n\nReturn state with qbits in qseq removed. \n\nqseq must of the form ((qbit1, state1), (qbit2, state2,...). Will only work if qbits are not entangled.\n\n\n\n\n\n","category":"method"},{"location":"#Qsim.del_qbit-Tuple{Any, Integer, Any}","page":"Home","title":"Qsim.del_qbit","text":"function del_qbit(state, qbit::Integer, qbitstate)\n\nReturn state with the qbit removed. Will only work correctly when qbit is not entangled with the rest of the state!\n\n\n\n\n\n","category":"method"},{"location":"#Qsim.measure-Tuple{Any, Any}","page":"Home","title":"Qsim.measure","text":"function measure(state, mseq; delete=false)\n\nMeasure state given a measurement sequence mseq. \n\nWill delete measured qubits if delete=true.\n\n\n\n\n\n","category":"method"},{"location":"#Qsim.measure-Tuple{Any, Integer, Any}","page":"Home","title":"Qsim.measure","text":"function measure(state, qbit::Integer, qout; delete=false)\n\nProject qbit into state qout and return the state. Will delete measured qubit if delete=true.\n\n\n\n\n\n","category":"method"},{"location":"#Qsim.ptrace-Tuple{Any, Integer}","page":"Home","title":"Qsim.ptrace","text":"function ptrace(operator, qbit::Integer)\n\nAn inefficient qubit  partial trace implementation.\n\n\n\n\n\n","category":"method"},{"location":"#Qsim.qbit_op-Tuple{Any, Integer, Integer}","page":"Home","title":"Qsim.qbit_op","text":"qbit_op(gate, qbit::Integer, qmax::Integer)\n\nReturns a qmax qubit operator with the provided gate acting on a single qubit. \n\n\n\n\n\n","category":"method"},{"location":"#Qsim.qbit_op-Tuple{Any, Vector{Integer}, Any}","page":"Home","title":"Qsim.qbit_op","text":"function qubit_op(gate, qbits::Vector{Integer}, qmax)\n\nReturns a qmax qubit operator with the provided gate acting on multiple qubits. \n\n\n\n\n\n","category":"method"}]
}
